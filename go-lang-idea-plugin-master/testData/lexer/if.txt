func ('func')
GO_WHITESPACE (' ')
identifier ('sqrt')
( ('(')
identifier ('x')
GO_WHITESPACE (' ')
identifier ('float64')
) (')')
GO_WHITESPACE (' ')
identifier ('string')
GO_WHITESPACE (' ')
{ ('{')
GO_WS_NEW_LINES ('\n')
GO_WHITESPACE ('    ')
if ('if')
GO_WHITESPACE (' ')
identifier ('x')
GO_WHITESPACE (' ')
< ('<')
GO_WHITESPACE (' ')
int ('0')
GO_WHITESPACE (' ')
{ ('{')
GO_WS_NEW_LINES ('\n')
GO_WHITESPACE ('        ')
return ('return')
GO_WHITESPACE (' ')
identifier ('sqrt')
( ('(')
- ('-')
identifier ('x')
) (')')
GO_WHITESPACE (' ')
+ ('+')
GO_WHITESPACE (' ')
string ('"i"')
<NL> ('')
GO_WS_NEW_LINES ('\n')
GO_WHITESPACE ('    ')
} ('}')
<NL> ('')
GO_WS_NEW_LINES ('\n')
GO_WHITESPACE ('    ')
return ('return')
GO_WHITESPACE (' ')
identifier ('fmt')
. ('.')
identifier ('Sprint')
( ('(')
identifier ('math')
. ('.')
identifier ('Sqrt')
( ('(')
identifier ('x')
) (')')
) (')')
<NL> ('')
GO_WS_NEW_LINES ('\n')
} ('}')
<NL> ('')
GO_WS_NEW_LINES ('\n\n')
func ('func')
GO_WHITESPACE (' ')
identifier ('pow')
( ('(')
identifier ('x')
, (',')
GO_WHITESPACE (' ')
identifier ('n')
, (',')
GO_WHITESPACE (' ')
identifier ('lim')
GO_WHITESPACE (' ')
identifier ('float64')
) (')')
GO_WHITESPACE (' ')
identifier ('float64')
GO_WHITESPACE (' ')
{ ('{')
GO_WS_NEW_LINES ('\n')
GO_WHITESPACE ('    ')
if ('if')
GO_WHITESPACE (' ')
identifier ('v')
GO_WHITESPACE (' ')
:= (':=')
GO_WHITESPACE (' ')
identifier ('math')
. ('.')
identifier ('Pow')
( ('(')
identifier ('x')
, (',')
GO_WHITESPACE (' ')
identifier ('n')
) (')')
; (';')
GO_WHITESPACE (' ')
identifier ('v')
GO_WHITESPACE (' ')
< ('<')
GO_WHITESPACE (' ')
identifier ('lim')
GO_WHITESPACE (' ')
{ ('{')
GO_WS_NEW_LINES ('\n')
GO_WHITESPACE ('        ')
return ('return')
GO_WHITESPACE (' ')
identifier ('v')
<NL> ('')
GO_WS_NEW_LINES ('\n')
GO_WHITESPACE ('    ')
} ('}')
<NL> ('')
GO_WS_NEW_LINES ('\n')
GO_WHITESPACE ('    ')
return ('return')
GO_WHITESPACE (' ')
identifier ('lim')
<NL> ('')
GO_WS_NEW_LINES ('\n')
} ('}')
<NL> ('')
GO_WS_NEW_LINES ('\n\n')
func ('func')
GO_WHITESPACE (' ')
identifier ('powElse')
( ('(')
identifier ('x')
, (',')
GO_WHITESPACE (' ')
identifier ('n')
, (',')
GO_WHITESPACE (' ')
identifier ('lim')
GO_WHITESPACE (' ')
identifier ('float64')
) (')')
GO_WHITESPACE (' ')
identifier ('float64')
GO_WHITESPACE (' ')
{ ('{')
GO_WS_NEW_LINES ('\n')
GO_WHITESPACE ('    ')
if ('if')
GO_WHITESPACE (' ')
identifier ('v')
GO_WHITESPACE (' ')
:= (':=')
GO_WHITESPACE (' ')
identifier ('math')
. ('.')
identifier ('Pow')
( ('(')
identifier ('x')
, (',')
GO_WHITESPACE (' ')
identifier ('n')
) (')')
; (';')
GO_WHITESPACE (' ')
identifier ('v')
GO_WHITESPACE (' ')
< ('<')
GO_WHITESPACE (' ')
identifier ('lim')
GO_WHITESPACE (' ')
{ ('{')
GO_WS_NEW_LINES ('\n')
GO_WHITESPACE ('        ')
return ('return')
GO_WHITESPACE (' ')
identifier ('v')
<NL> ('')
GO_WS_NEW_LINES ('\n')
GO_WHITESPACE ('    ')
} ('}')
GO_WHITESPACE (' ')
else ('else')
GO_WHITESPACE (' ')
{ ('{')
GO_WS_NEW_LINES ('\n')
GO_WHITESPACE ('        ')
identifier ('fmt')
. ('.')
identifier ('Printf')
( ('(')
string ('"%g >= %g\n"')
, (',')
GO_WHITESPACE (' ')
identifier ('v')
, (',')
GO_WHITESPACE (' ')
identifier ('lim')
) (')')
<NL> ('')
GO_WS_NEW_LINES ('\n')
GO_WHITESPACE ('    ')
} ('}')
<NL> ('')
GO_WS_NEW_LINES ('\n')
GO_WHITESPACE ('    ')
GO_LINE_COMMENT ('// can't use v here, though')
GO_WS_NEW_LINES ('\n')
GO_WHITESPACE ('    ')
return ('return')
GO_WHITESPACE (' ')
identifier ('lim')
<NL> ('')
GO_WS_NEW_LINES ('\n')
} ('}')
