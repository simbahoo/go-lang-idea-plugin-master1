GO_FILE
  PsiComment(GO_LINE_COMMENT)('// Copyright 2010 The Go Authors. All rights reserved.')
  PsiComment(GO_LINE_COMMENT)('// Use of this source code is governed by a BSD-style')
  PsiComment(GO_LINE_COMMENT)('// license that can be found in the LICENSE file.')
  PACKAGE_CLAUSE
    PsiElement(package)('package')
    PsiElement(identifier)('runtime')
  IMPORT_LIST
    <empty list>
  PsiComment(GO_LINE_COMMENT)('// The Error interface identifies a run time error.')
  TYPE_DECLARATION
    PsiElement(type)('type')
    TYPE_SPEC
      SPEC_TYPE
        PsiElement(identifier)('Error')
        INTERFACE_TYPE
          PsiElement(interface)('interface')
          PsiElement({)('{')
          METHOD_SPEC
            TYPE_REFERENCE_EXPRESSION
              PsiElement(identifier)('error')
          PsiComment(GO_LINE_COMMENT)('// RuntimeError is a no-op function but')
          PsiComment(GO_LINE_COMMENT)('// serves to distinguish types that are runtime')
          PsiComment(GO_LINE_COMMENT)('// errors from ordinary errors: a type is a')
          PsiComment(GO_LINE_COMMENT)('// runtime error if it has a RuntimeError method.')
          METHOD_SPEC
            PsiElement(identifier)('RuntimeError')
            SIGNATURE
              PARAMETERS
                PsiElement(()('(')
                PsiElement())(')')
          PsiElement(})('}')
  PsiComment(GO_LINE_COMMENT)('// A TypeAssertionError explains a failed type assertion.')
  TYPE_DECLARATION
    PsiElement(type)('type')
    TYPE_SPEC
      SPEC_TYPE
        PsiElement(identifier)('TypeAssertionError')
        STRUCT_TYPE
          PsiElement(struct)('struct')
          PsiElement({)('{')
          FIELD_DECLARATION
            FIELD_DEFINITION
              PsiElement(identifier)('interfaceString')
            TYPE
              TYPE_REFERENCE_EXPRESSION
                PsiElement(identifier)('string')
          FIELD_DECLARATION
            FIELD_DEFINITION
              PsiElement(identifier)('concreteString')
            TYPE
              TYPE_REFERENCE_EXPRESSION
                PsiElement(identifier)('string')
          FIELD_DECLARATION
            FIELD_DEFINITION
              PsiElement(identifier)('assertedString')
            TYPE
              TYPE_REFERENCE_EXPRESSION
                PsiElement(identifier)('string')
          FIELD_DECLARATION
            FIELD_DEFINITION
              PsiElement(identifier)('missingMethod')
            TYPE
              TYPE_REFERENCE_EXPRESSION
                PsiElement(identifier)('string')
          PsiComment(GO_LINE_COMMENT)('// one method needed by Interface, missing from Concrete')
          PsiElement(})('}')
  METHOD_DECLARATION
    PsiElement(func)('func')
    RECEIVER
      PsiElement(()('(')
      POINTER_TYPE
        PsiElement(*)('*')
        TYPE
          TYPE_REFERENCE_EXPRESSION
            PsiElement(identifier)('TypeAssertionError')
      PsiElement())(')')
    PsiElement(identifier)('RuntimeError')
    SIGNATURE
      PARAMETERS
        PsiElement(()('(')
        PsiElement())(')')
    BLOCK
      PsiElement({)('{')
      PsiElement(})('}')
  METHOD_DECLARATION
    PsiElement(func)('func')
    RECEIVER
      PsiElement(()('(')
      PsiElement(identifier)('e')
      POINTER_TYPE
        PsiElement(*)('*')
        TYPE
          TYPE_REFERENCE_EXPRESSION
            PsiElement(identifier)('TypeAssertionError')
      PsiElement())(')')
    PsiElement(identifier)('Error')
    SIGNATURE
      PARAMETERS
        PsiElement(()('(')
        PsiElement())(')')
      RESULT
        TYPE
          TYPE_REFERENCE_EXPRESSION
            PsiElement(identifier)('string')
    BLOCK
      PsiElement({)('{')
      SIMPLE_STATEMENT
        SHORT_VAR_DECLARATION
          VAR_DEFINITION
            PsiElement(identifier)('inter')
          PsiElement(:=)(':=')
          REFERENCE_EXPRESSION
            REFERENCE_EXPRESSION
              PsiElement(identifier)('e')
            PsiElement(.)('.')
            PsiElement(identifier)('interfaceString')
      IF_STATEMENT
        PsiElement(if)('if')
        SIMPLE_STATEMENT
          LEFT_HAND_EXPR_LIST
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(identifier)('inter')
              PsiElement(==)('==')
              STRING_LITERAL
                PsiElement(string)('""')
        BLOCK
          PsiElement({)('{')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(identifier)('inter')
            ASSIGN_OP
              PsiElement(=)('=')
            STRING_LITERAL
              PsiElement(string)('"interface"')
          PsiElement(})('}')
      IF_STATEMENT
        PsiElement(if)('if')
        SIMPLE_STATEMENT
          LEFT_HAND_EXPR_LIST
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(identifier)('e')
                PsiElement(.)('.')
                PsiElement(identifier)('concreteString')
              PsiElement(==)('==')
              STRING_LITERAL
                PsiElement(string)('""')
        BLOCK
          PsiElement({)('{')
          RETURN_STATEMENT
            PsiElement(return)('return')
            ADD_EXPR
              ADD_EXPR
                ADD_EXPR
                  STRING_LITERAL
                    PsiElement(string)('"interface conversion: "')
                  PsiElement(+)('+')
                  REFERENCE_EXPRESSION
                    PsiElement(identifier)('inter')
                PsiElement(+)('+')
                STRING_LITERAL
                  PsiElement(string)('" is nil, not "')
              PsiElement(+)('+')
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(identifier)('e')
                PsiElement(.)('.')
                PsiElement(identifier)('assertedString')
          PsiElement(})('}')
      IF_STATEMENT
        PsiElement(if)('if')
        SIMPLE_STATEMENT
          LEFT_HAND_EXPR_LIST
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(identifier)('e')
                PsiElement(.)('.')
                PsiElement(identifier)('missingMethod')
              PsiElement(==)('==')
              STRING_LITERAL
                PsiElement(string)('""')
        BLOCK
          PsiElement({)('{')
          RETURN_STATEMENT
            PsiElement(return)('return')
            ADD_EXPR
              ADD_EXPR
                ADD_EXPR
                  ADD_EXPR
                    ADD_EXPR
                      STRING_LITERAL
                        PsiElement(string)('"interface conversion: "')
                      PsiElement(+)('+')
                      REFERENCE_EXPRESSION
                        PsiElement(identifier)('inter')
                    PsiElement(+)('+')
                    STRING_LITERAL
                      PsiElement(string)('" is "')
                  PsiElement(+)('+')
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(identifier)('e')
                    PsiElement(.)('.')
                    PsiElement(identifier)('concreteString')
                PsiElement(+)('+')
                STRING_LITERAL
                  PsiElement(string)('", not "')
              PsiElement(+)('+')
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(identifier)('e')
                PsiElement(.)('.')
                PsiElement(identifier)('assertedString')
          PsiElement(})('}')
      RETURN_STATEMENT
        PsiElement(return)('return')
        ADD_EXPR
          ADD_EXPR
            ADD_EXPR
              ADD_EXPR
                ADD_EXPR
                  STRING_LITERAL
                    PsiElement(string)('"interface conversion: "')
                  PsiElement(+)('+')
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(identifier)('e')
                    PsiElement(.)('.')
                    PsiElement(identifier)('concreteString')
                PsiElement(+)('+')
                STRING_LITERAL
                  PsiElement(string)('" is not "')
              PsiElement(+)('+')
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(identifier)('e')
                PsiElement(.)('.')
                PsiElement(identifier)('assertedString')
            PsiElement(+)('+')
            STRING_LITERAL
              PsiElement(string)('": missing method "')
          PsiElement(+)('+')
          REFERENCE_EXPRESSION
            REFERENCE_EXPRESSION
              PsiElement(identifier)('e')
            PsiElement(.)('.')
            PsiElement(identifier)('missingMethod')
      PsiElement(})('}')
  PsiComment(GO_LINE_COMMENT)('// For calling from C.')
  FUNCTION_DECLARATION
    PsiElement(func)('func')
    PsiElement(identifier)('newTypeAssertionError')
    SIGNATURE
      PARAMETERS
        PsiElement(()('(')
        PARAMETER_DECLARATION
          PARAM_DEFINITION
            PsiElement(identifier)('ps1')
          PsiElement(,)(',')
          PARAM_DEFINITION
            PsiElement(identifier)('ps2')
          PsiElement(,)(',')
          PARAM_DEFINITION
            PsiElement(identifier)('ps3')
          POINTER_TYPE
            PsiElement(*)('*')
            TYPE
              TYPE_REFERENCE_EXPRESSION
                PsiElement(identifier)('string')
        PsiElement(,)(',')
        PARAMETER_DECLARATION
          PARAM_DEFINITION
            PsiElement(identifier)('pmeth')
          POINTER_TYPE
            PsiElement(*)('*')
            TYPE
              TYPE_REFERENCE_EXPRESSION
                PsiElement(identifier)('string')
        PsiElement(,)(',')
        PARAMETER_DECLARATION
          PARAM_DEFINITION
            PsiElement(identifier)('ret')
          POINTER_TYPE
            PsiElement(*)('*')
            INTERFACE_TYPE
              PsiElement(interface)('interface')
              PsiElement({)('{')
              PsiElement(})('}')
        PsiElement())(')')
    BLOCK
      PsiElement({)('{')
      STATEMENT
        VAR_DECLARATION
          PsiElement(var)('var')
          VAR_SPEC
            VAR_DEFINITION
              PsiElement(identifier)('s1')
            PsiElement(,)(',')
            VAR_DEFINITION
              PsiElement(identifier)('s2')
            PsiElement(,)(',')
            VAR_DEFINITION
              PsiElement(identifier)('s3')
            PsiElement(,)(',')
            VAR_DEFINITION
              PsiElement(identifier)('meth')
            TYPE
              TYPE_REFERENCE_EXPRESSION
                PsiElement(identifier)('string')
      IF_STATEMENT
        PsiElement(if)('if')
        SIMPLE_STATEMENT
          LEFT_HAND_EXPR_LIST
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(identifier)('ps1')
              PsiElement(!=)('!=')
              REFERENCE_EXPRESSION
                PsiElement(identifier)('nil')
        BLOCK
          PsiElement({)('{')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(identifier)('s1')
            ASSIGN_OP
              PsiElement(=)('=')
            UNARY_EXPR
              PsiElement(*)('*')
              REFERENCE_EXPRESSION
                PsiElement(identifier)('ps1')
          PsiElement(})('}')
      IF_STATEMENT
        PsiElement(if)('if')
        SIMPLE_STATEMENT
          LEFT_HAND_EXPR_LIST
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(identifier)('ps2')
              PsiElement(!=)('!=')
              REFERENCE_EXPRESSION
                PsiElement(identifier)('nil')
        BLOCK
          PsiElement({)('{')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(identifier)('s2')
            ASSIGN_OP
              PsiElement(=)('=')
            UNARY_EXPR
              PsiElement(*)('*')
              REFERENCE_EXPRESSION
                PsiElement(identifier)('ps2')
          PsiElement(})('}')
      IF_STATEMENT
        PsiElement(if)('if')
        SIMPLE_STATEMENT
          LEFT_HAND_EXPR_LIST
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(identifier)('ps3')
              PsiElement(!=)('!=')
              REFERENCE_EXPRESSION
                PsiElement(identifier)('nil')
        BLOCK
          PsiElement({)('{')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(identifier)('s3')
            ASSIGN_OP
              PsiElement(=)('=')
            UNARY_EXPR
              PsiElement(*)('*')
              REFERENCE_EXPRESSION
                PsiElement(identifier)('ps3')
          PsiElement(})('}')
      IF_STATEMENT
        PsiElement(if)('if')
        SIMPLE_STATEMENT
          LEFT_HAND_EXPR_LIST
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                PsiElement(identifier)('pmeth')
              PsiElement(!=)('!=')
              REFERENCE_EXPRESSION
                PsiElement(identifier)('nil')
        BLOCK
          PsiElement({)('{')
          ASSIGNMENT_STATEMENT
            LEFT_HAND_EXPR_LIST
              REFERENCE_EXPRESSION
                PsiElement(identifier)('meth')
            ASSIGN_OP
              PsiElement(=)('=')
            UNARY_EXPR
              PsiElement(*)('*')
              REFERENCE_EXPRESSION
                PsiElement(identifier)('pmeth')
          PsiElement(})('}')
      ASSIGNMENT_STATEMENT
        LEFT_HAND_EXPR_LIST
          UNARY_EXPR
            PsiElement(*)('*')
            REFERENCE_EXPRESSION
              PsiElement(identifier)('ret')
        ASSIGN_OP
          PsiElement(=)('=')
        UNARY_EXPR
          PsiElement(&)('&')
          COMPOSITE_LIT
            TYPE_REFERENCE_EXPRESSION
              PsiElement(identifier)('TypeAssertionError')
            LITERAL_VALUE
              PsiElement({)('{')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(identifier)('s1')
              PsiElement(,)(',')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(identifier)('s2')
              PsiElement(,)(',')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(identifier)('s3')
              PsiElement(,)(',')
              ELEMENT
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(identifier)('meth')
              PsiElement(})('}')
      PsiElement(})('}')
  PsiComment(GO_LINE_COMMENT)('// An errorString represents a runtime error described by a single string.')
  TYPE_DECLARATION
    PsiElement(type)('type')
    TYPE_SPEC
      SPEC_TYPE
        PsiElement(identifier)('errorString')
        TYPE
          TYPE_REFERENCE_EXPRESSION
            PsiElement(identifier)('string')
  METHOD_DECLARATION
    PsiElement(func)('func')
    RECEIVER
      PsiElement(()('(')
      PsiElement(identifier)('e')
      TYPE
        TYPE_REFERENCE_EXPRESSION
          PsiElement(identifier)('errorString')
      PsiElement())(')')
    PsiElement(identifier)('RuntimeError')
    SIGNATURE
      PARAMETERS
        PsiElement(()('(')
        PsiElement())(')')
    BLOCK
      PsiElement({)('{')
      PsiElement(})('}')
  METHOD_DECLARATION
    PsiElement(func)('func')
    RECEIVER
      PsiElement(()('(')
      PsiElement(identifier)('e')
      TYPE
        TYPE_REFERENCE_EXPRESSION
          PsiElement(identifier)('errorString')
      PsiElement())(')')
    PsiElement(identifier)('Error')
    SIGNATURE
      PARAMETERS
        PsiElement(()('(')
        PsiElement())(')')
      RESULT
        TYPE
          TYPE_REFERENCE_EXPRESSION
            PsiElement(identifier)('string')
    BLOCK
      PsiElement({)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          REFERENCE_EXPRESSION
            PsiElement(identifier)('aaa')
      RETURN_STATEMENT
        PsiElement(return)('return')
        ADD_EXPR
          STRING_LITERAL
            PsiElement(string)('"runtime error: "')
          PsiElement(+)('+')
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(identifier)('string')
            ARGUMENT_LIST
              PsiElement(()('(')
              REFERENCE_EXPRESSION
                PsiElement(identifier)('e')
              PsiElement())(')')
      PsiElement(})('}')
  PsiComment(GO_LINE_COMMENT)('// For calling from C.')
  FUNCTION_DECLARATION
    PsiElement(func)('func')
    PsiElement(identifier)('newErrorString')
    SIGNATURE
      PARAMETERS
        PsiElement(()('(')
        PARAMETER_DECLARATION
          PARAM_DEFINITION
            PsiElement(identifier)('s')
          TYPE
            TYPE_REFERENCE_EXPRESSION
              PsiElement(identifier)('string')
        PsiElement(,)(',')
        PARAMETER_DECLARATION
          PARAM_DEFINITION
            PsiElement(identifier)('ret')
          POINTER_TYPE
            PsiElement(*)('*')
            INTERFACE_TYPE
              PsiElement(interface)('interface')
              PsiElement({)('{')
              PsiElement(})('}')
        PsiElement())(')')
    BLOCK
      PsiElement({)('{')
      ASSIGNMENT_STATEMENT
        LEFT_HAND_EXPR_LIST
          UNARY_EXPR
            PsiElement(*)('*')
            REFERENCE_EXPRESSION
              PsiElement(identifier)('ret')
        ASSIGN_OP
          PsiElement(=)('=')
        CALL_EXPR
          REFERENCE_EXPRESSION
            PsiElement(identifier)('errorString')
          ARGUMENT_LIST
            PsiElement(()('(')
            REFERENCE_EXPRESSION
              PsiElement(identifier)('s')
            PsiElement())(')')
      PsiElement(})('}')
  TYPE_DECLARATION
    PsiElement(type)('type')
    TYPE_SPEC
      SPEC_TYPE
        PsiElement(identifier)('stringer')
        INTERFACE_TYPE
          PsiElement(interface)('interface')
          PsiElement({)('{')
          METHOD_SPEC
            PsiElement(identifier)('String')
            SIGNATURE
              PARAMETERS
                PsiElement(()('(')
                PsiElement())(')')
              RESULT
                TYPE
                  TYPE_REFERENCE_EXPRESSION
                    PsiElement(identifier)('string')
          PsiElement(})('}')
  FUNCTION_DECLARATION
    PsiElement(func)('func')
    PsiElement(identifier)('typestring')
    SIGNATURE
      PARAMETERS
        PsiElement(()('(')
        PARAMETER_DECLARATION
          INTERFACE_TYPE
            PsiElement(interface)('interface')
            PsiElement({)('{')
            PsiElement(})('}')
        PsiElement())(')')
      RESULT
        TYPE
          TYPE_REFERENCE_EXPRESSION
            PsiElement(identifier)('string')
  PsiComment(GO_LINE_COMMENT)('// For calling from C.')
  PsiComment(GO_LINE_COMMENT)('// Prints an argument passed to panic.')
  PsiComment(GO_LINE_COMMENT)('// There's room for arbitrary complexity here, but we keep it')
  PsiComment(GO_LINE_COMMENT)('// simple and handle just a few important cases: int, string, and Stringer.')
  FUNCTION_DECLARATION
    PsiElement(func)('func')
    PsiElement(identifier)('printany')
    SIGNATURE
      PARAMETERS
        PsiElement(()('(')
        PARAMETER_DECLARATION
          PARAM_DEFINITION
            PsiElement(identifier)('i')
          INTERFACE_TYPE
            PsiElement(interface)('interface')
            PsiElement({)('{')
            PsiElement(})('}')
        PsiElement())(')')
    BLOCK
      PsiElement({)('{')
      TYPE_SWITCH_STATEMENT
        SWITCH_START
          PsiElement(switch)('switch')
        TYPE_SWITCH_GUARD
          VAR_DEFINITION
            PsiElement(identifier)('v')
          PsiElement(:=)(':=')
          REFERENCE_EXPRESSION
            PsiElement(identifier)('i')
          PsiElement(.)('.')
          TYPE_GUARD
            PsiElement(()('(')
            PsiElement(type)('type')
            PsiElement())(')')
        PsiElement({)('{')
        TYPE_CASE_CLAUSE
          PsiElement(case)('case')
          TYPE
            TYPE_REFERENCE_EXPRESSION
              PsiElement(identifier)('nil')
          PsiElement(:)(':')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              CALL_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(identifier)('print')
                ARGUMENT_LIST
                  PsiElement(()('(')
                  STRING_LITERAL
                    PsiElement(string)('"nil"')
                  PsiElement())(')')
        TYPE_CASE_CLAUSE
          PsiElement(case)('case')
          TYPE
            TYPE_REFERENCE_EXPRESSION
              PsiElement(identifier)('stringer')
          PsiElement(:)(':')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              CALL_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(identifier)('print')
                ARGUMENT_LIST
                  PsiElement(()('(')
                  CALL_EXPR
                    REFERENCE_EXPRESSION
                      REFERENCE_EXPRESSION
                        PsiElement(identifier)('v')
                      PsiElement(.)('.')
                      PsiElement(identifier)('String')
                    ARGUMENT_LIST
                      PsiElement(()('(')
                      PsiElement())(')')
                  PsiElement())(')')
        TYPE_CASE_CLAUSE
          PsiElement(case)('case')
          TYPE
            TYPE_REFERENCE_EXPRESSION
              PsiElement(identifier)('error')
          PsiElement(:)(':')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              CALL_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(identifier)('print')
                ARGUMENT_LIST
                  PsiElement(()('(')
                  CALL_EXPR
                    REFERENCE_EXPRESSION
                      REFERENCE_EXPRESSION
                        PsiElement(identifier)('v')
                      PsiElement(.)('.')
                      PsiElement(identifier)('Error')
                    ARGUMENT_LIST
                      PsiElement(()('(')
                      PsiElement())(')')
                  PsiElement())(')')
        TYPE_CASE_CLAUSE
          PsiElement(case)('case')
          TYPE
            TYPE_REFERENCE_EXPRESSION
              PsiElement(identifier)('int')
          PsiElement(:)(':')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              CALL_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(identifier)('print')
                ARGUMENT_LIST
                  PsiElement(()('(')
                  REFERENCE_EXPRESSION
                    PsiElement(identifier)('v')
                  PsiElement())(')')
        TYPE_CASE_CLAUSE
          PsiElement(case)('case')
          TYPE
            TYPE_REFERENCE_EXPRESSION
              PsiElement(identifier)('string')
          PsiElement(:)(':')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              CALL_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(identifier)('print')
                ARGUMENT_LIST
                  PsiElement(()('(')
                  REFERENCE_EXPRESSION
                    PsiElement(identifier)('v')
                  PsiElement())(')')
        TYPE_CASE_CLAUSE
          PsiElement(default)('default')
          PsiElement(:)(':')
          SIMPLE_STATEMENT
            LEFT_HAND_EXPR_LIST
              CALL_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(identifier)('print')
                ARGUMENT_LIST
                  PsiElement(()('(')
                  STRING_LITERAL
                    PsiElement(string)('"("')
                  PsiElement(,)(',')
                  CALL_EXPR
                    REFERENCE_EXPRESSION
                      PsiElement(identifier)('typestring')
                    ARGUMENT_LIST
                      PsiElement(()('(')
                      REFERENCE_EXPRESSION
                        PsiElement(identifier)('i')
                      PsiElement())(')')
                  PsiElement(,)(',')
                  STRING_LITERAL
                    PsiElement(string)('") "')
                  PsiElement(,)(',')
                  REFERENCE_EXPRESSION
                    PsiElement(identifier)('i')
                  PsiElement())(')')
        PsiElement(})('}')
      PsiElement(})('}')
  PsiComment(GO_LINE_COMMENT)('// called from generated code')
  FUNCTION_DECLARATION
    PsiElement(func)('func')
    PsiElement(identifier)('panicwrap')
    SIGNATURE
      PARAMETERS
        PsiElement(()('(')
        PARAMETER_DECLARATION
          PARAM_DEFINITION
            PsiElement(identifier)('pkg')
          PsiElement(,)(',')
          PARAM_DEFINITION
            PsiElement(identifier)('typ')
          PsiElement(,)(',')
          PARAM_DEFINITION
            PsiElement(identifier)('meth')
          TYPE
            TYPE_REFERENCE_EXPRESSION
              PsiElement(identifier)('string')
        PsiElement())(')')
    BLOCK
      PsiElement({)('{')
      SIMPLE_STATEMENT
        LEFT_HAND_EXPR_LIST
          CALL_EXPR
            REFERENCE_EXPRESSION
              PsiElement(identifier)('panic')
            ARGUMENT_LIST
              PsiElement(()('(')
              ADD_EXPR
                ADD_EXPR
                  ADD_EXPR
                    ADD_EXPR
                      ADD_EXPR
                        ADD_EXPR
                          ADD_EXPR
                            ADD_EXPR
                              STRING_LITERAL
                                PsiElement(string)('"value method "')
                              PsiElement(+)('+')
                              REFERENCE_EXPRESSION
                                PsiElement(identifier)('pkg')
                            PsiElement(+)('+')
                            STRING_LITERAL
                              PsiElement(string)('"."')
                          PsiElement(+)('+')
                          REFERENCE_EXPRESSION
                            PsiElement(identifier)('typ')
                        PsiElement(+)('+')
                        STRING_LITERAL
                          PsiElement(string)('"."')
                      PsiElement(+)('+')
                      REFERENCE_EXPRESSION
                        PsiElement(identifier)('meth')
                    PsiElement(+)('+')
                    STRING_LITERAL
                      PsiElement(string)('" called using nil *"')
                  PsiElement(+)('+')
                  REFERENCE_EXPRESSION
                    PsiElement(identifier)('typ')
                PsiElement(+)('+')
                STRING_LITERAL
                  PsiElement(string)('" pointer"')
              PsiElement())(')')
      PsiElement(})('}')
  PsiComment(GO_LINE_COMMENT)('// New returns an initialized Fetcher.')
  FUNCTION_DECLARATION
    PsiElement(func)('func')
    PsiElement(identifier)('New')
    SIGNATURE
      PARAMETERS
        PsiElement(()('(')
        PARAMETER_DECLARATION
          PARAM_DEFINITION
            PsiElement(identifier)('h')
          TYPE
            TYPE_REFERENCE_EXPRESSION
              PsiElement(identifier)('Handler')
        PsiElement())(')')
      RESULT
        POINTER_TYPE
          PsiElement(*)('*')
          TYPE
            TYPE_REFERENCE_EXPRESSION
              PsiElement(identifier)('Fetcher')
    BLOCK
      PsiElement({)('{')
      RETURN_STATEMENT
        PsiElement(return)('return')
        UNARY_EXPR
          PsiElement(&)('&')
          COMPOSITE_LIT
            TYPE_REFERENCE_EXPRESSION
              PsiElement(identifier)('Fetcher')
            LITERAL_VALUE
              PsiElement({)('{')
              ELEMENT
                KEY
                  FIELD_NAME
                    PsiElement(identifier)('Handler')
                PsiElement(:)(':')
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(identifier)('h')
              PsiElement(,)(',')
              ELEMENT
                KEY
                  FIELD_NAME
                    PsiElement(identifier)('CrawlDelay')
                PsiElement(:)(':')
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(identifier)('DefaultCrawlDelay')
              PsiElement(,)(',')
              ELEMENT
                KEY
                  FIELD_NAME
                    PsiElement(identifier)('HttpClient')
                PsiElement(:)(':')
                VALUE
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(identifier)('http')
                    PsiElement(.)('.')
                    PsiElement(identifier)('DefaultClient')
              PsiElement(,)(',')
              ELEMENT
                KEY
                  FIELD_NAME
                    PsiElement(identifier)('UserAgent')
                PsiElement(:)(':')
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(identifier)('DefaultUserAgent')
              PsiElement(,)(',')
              ELEMENT
                KEY
                  FIELD_NAME
                    PsiElement(identifier)('WorkerIdleTTL')
                PsiElement(:)(':')
                VALUE
                  REFERENCE_EXPRESSION
                    PsiElement(identifier)('DefaultWorkerIdleTTL')
              PsiElement(,)(',')
              ELEMENT
                KEY
                  FIELD_NAME
                    PsiElement(identifier)('dbg')
                PsiElement(:)(':')
                VALUE
                  BUILTIN_CALL_EXPR
                    REFERENCE_EXPRESSION
                      PsiElement(identifier)('make')
                    BUILTIN_ARGUMENT_LIST
                      PsiElement(()('(')
                      CHANNEL_TYPE
                        PsiElement(chan)('chan')
                        POINTER_TYPE
                          PsiElement(*)('*')
                          TYPE
                            TYPE_REFERENCE_EXPRESSION
                              PsiElement(identifier)('DebugInfo')
                      PsiElement(,)(',')
                      LITERAL
                        PsiElement(int)('1')
                      PsiElement())(')')
              PsiElement(,)(',')
              PsiElement(})('}')
      PsiElement(})('}')